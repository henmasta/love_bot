#beta 0.5
#Link on bot: @newloveubot or t.me/newloveubot
#Link on me: https://github.com/henmasta

""" 
–ë—É–¥—å –æ—Å—Ç–æ—Ä–æ–∂–µ–Ω, —Å—Ç—Ä–∞–Ω–Ω–∏–∫.
–≠—Ç–æ "–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ" –¥–ª—è –±–æ—Ç–∞ —Å–¥–µ–ª–∞–Ω–æ –∏–∑ –≥–æ–≤–Ω–∞ –∏ –≥–æ–≤–Ω–∞. 
–ï—Å–ª–∏ —Ç—ã –¥–æ—Ç—Ä–æ–Ω–µ—à—å—Å—è –¥–æ –Ω–µ–≥–æ, —Ç–æ —Ç–≤–æ—è —á–µ—Å—Ç—å –±–æ–ª—å—à–µ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –±—É–¥–µ—Ç –æ—Ç–º—ã—Ç–∞.
"""

import os
import sys
import time
import telebot
import threading
import tkinter as tk
import win32gui, win32con
from tkinter import Label
from tkinter import Button
from tkinter import messagebox

#Get Telegram token
bot = telebot.TeleBot("2100347098:AAE66dt074ywIrXyJ_7mIsG68vGWjtoiZpU")

#Function for button "START"
def start(self):
	messagebox.showinfo('–û–ù–û –ñ–ò–í–û–ï!!!', '–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!')
	start_text = Label(root, text = "Status: –û–ù –ñ–ò–í–ï–¢!!!", fg = "green", font=("Verdana 35	 bold"))
	start_text.pack(pady = 30)
	@bot.message_handler(commands=['Start', 'start'])
	def send_welcome(message):
		bot.reply_to(message, '–ù–∞–ø–∏—à–∏ "/–ª—é–±–ª—é" –∏ —É–≤–∏–¥–∏—à—å –¥–µ–π—Å—Ç–≤–∏–µ))')

	@bot.message_handler(commands=['–ª—é–±–ª—é', '–õ—é–±–ª—é'])
	def love(message):
		bot.reply_to(message, "–í—Å–µ–≥–æ 30 —Ä–∞–∑))")
		i = 0
		while(i <= 30):
			time.sleep(1)
			bot.reply_to(message, "–õ—é–±–ª—éüíúüíúüíú")
			print(i)
			i += 1

	bot.infinity_polling()

#Function for button "EXIT"
def exit():
	os._exit(0)

#Interface field declaration
root = tk.Tk()
root.title("Bot")

text_label = "–ù–∞–∂–º–∏ —Å—Ç–∞—Ä—Ç —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å\n\nB—ã–π—Ç–∏ —á—Ç–æ–±—ã –≤—ã–π—Ç–∏))"

_label = Label(root, text = text_label, font=("Arial Bold", 20))
_label.pack(pady = 50)

_thread = threading.Thread(target = start, args = (1,))

#Buttons
_button_run = Button(root, text = "START", bg = "green", font=('Arial', 24), command = _thread.start)
_button_exit = Button(root, text = "EXIT", bg = "red", font=('Arial', 24), command = exit)

_button_run.place(x = 100, y = 360)
_button_exit.place(x = 400, y = 360)


if __name__ == "__main__":
	_hide = win32gui.GetForegroundWindow()
	win32gui.ShowWindow(_hide , win32con.SW_HIDE)
	root.geometry('600x500')
	root.resizable(False, False)
	root.mainloop()